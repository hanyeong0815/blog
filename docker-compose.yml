# 파일 규격 버전
version: "3"
# 이 항목 밑에 실행하려는 컨테이너 들을 정의
services:
#   서비스 명
  music_board_mongo:
    image: mongo:5.0 # Official Image
    container_name: music_board_mongodb
    environment:
      # Information to Connect (Reserved Environments)
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
      - MONGO_INITDB_DATABASE=board
    ports:
      - 27017:27017 # accessing port : inside port
    restart: on-failure
    volumes:
      # "local(or volume container):inside directory"
      - sticky_volume_board_mongo:/data/db

  # MongoDB Client - web based
  music_board_mongo_express:
    # NOTE 1.0.0-alpha exists.
    image: mongo-express:0.54
    restart: always
    ports:
      - "27018:8081"
    environment:
      # ME_CONFIG_MONGODB_SERVER: ${Mongo DB container name} (required)
      ME_CONFIG_MONGODB_SERVER: music_board_mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      # mongodb://root:root@localhost:27037/shop?ssl=false

  music_postgres14_proto:
    image: postgres:14
    container_name: music_postgres14_rdb_proto
    environment:
      TZ: Asia/Seoul
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8 --lc-collate=C --lc-ctype=C'
    ports:
      - "5432:5432"
    volumes:
      - preset_sticky_volume:/var/lib/postgresql/data
      - ./db/initdb.d:/docker-entrypoint-initdb.d:ro
    env_file:
      - .env
    restart: always

  music_redis_proto:
    image: redis:7.0
    container_name: music_redis7_proto
    ports:
      - "6379:6379"
    volumes:
      - preset_sticky_volume:/redis/data
      - ./config/redis.conf:/usr/local/conf/redis.conf
    # 컨테이너에 docker label을 이용해서 메타데이터 추가
    labels:
      - "name=redis"
      - "mode=standalone"
    # 컨테이너 종료시 재시작 여부 설정
    restart: always
    command: redis-server /usr/local/conf/redis.conf

volumes:
  preset_sticky_volume:
  sticky_volume_board_mongo: